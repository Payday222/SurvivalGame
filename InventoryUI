using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

public class Inventory_UI : MonoBehaviour
{
    public item item;
    public GameObject invPanel;
    public player player;
    public List<Slot_UI> slots = new List<Slot_UI>();
    void Start()
    {
        invPanel.SetActive(false);
        selectedSlot = slots[si];
    }

    void Update()
    {
        if(Input.GetKeyDown(KeyCode.Tab)) {
            ToggleInventory(); 
        }
    }
    public void ToggleInventory() {
        if(!invPanel.activeSelf) {
            invPanel.SetActive(true);
             Refresh(); 
        } else {
            invPanel.SetActive(false);
        }

    }
     public void Refresh() { //correct
         if(slots.Count == player.inventory.slots.Count) {
            
             for(int i = 0; i < slots.Count; i++) {                
                 if(player.inventory.slots[i].itemname != "") { // error here
                    slots[i].SetItem(player.inventory.slots[i]);
                 } else {
                    slots[i].SetEmpty(); 
                 }
             }
         }
         }
         public void Remove(int slotID) {
            item itemToDrop = GameManager.Instance.itemManager.GetItemByName(player.inventory.slots[slotID].itemname);
            if(itemToDrop != null) {
                player.DropItem(itemToDrop);
            player.inventory.Remove(slotID);
            Refresh();
            }

         }
                  public void SelectSlot() {
            if(Input.GetKeyDown(KeyCode.RightArrow)) {
                si++;
                selectedSlot = slots[si];
                selectedSlot.image.color = Color.red;

                if(si > 24) {
                    si = 0;
                }
            } 
            if(Input.GetKeyDown(KeyCode.LeftArrow)) {
                si--;
                selectedSlot = slots[si];
                selectedSlot.image.color = Color.red;

                if(si < 0) {
                    si = 24;
                }

            }
            if(Input.GetKeyUp(KeyCode.LeftArrow) || Input.GetKeyUp(KeyCode.RightArrow)) {
                selectedSlot.image.color = Color.white;
            }
        
         }
         private void UseItem() {
            if(Input.GetKeyDown(KeyCode.E)) {
                Inventory.Slot slot = new Inventory.Slot();
                switch(player.inventory.slots[si].itemname) { //this is essentailly the selected slot

                    case "Turnip":
                        player.currentHealth += 5; //add dice later...
                        Debug.Log("Player health increased");
                        player.inventory.slots[si].count--;
                        if(player.inventory.slots[si].count == 0) {
                        player.inventory.slots[si] = slot;
                        }
                    break;
                    
                    case "Shit":
                        player.currentHealth -= 5; //add dice later...
                        Debug.Log("Player health decreased");
                        player.inventory.slots[si].count--;
                        if(player.inventory.slots[si].count == 0) {
                        player.inventory.slots[si] = slot;
                        }
                    break;

                    default: 
                        Debug.Log("UseItem Switch is invalid, check item names");
                    break;
                }
            }
         }
     }
